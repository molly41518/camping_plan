using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Web.Mvc;

namespace campingplan.Models
{

    //------------------------------------------------------------------------------
    // <auto-generated>
    //     這個程式碼是由範本產生。
    //
    //     對這個檔案進行手動變更可能導致您的應用程式產生未預期的行為。
    //     如果重新產生程式碼，將會覆寫對這個檔案的手動變更。
    // </auto-generated>
    //------------------------------------------------------------------------------
    //customer 有一個Metadata是UserMetaData
    [MetadataType(typeof(UserMetaData))]
    [Bind(Exclude = "varify_code,isvarify")]
    public partial class users
    {
        [DisplayName("確認密碼")]
        [Required(ErrorMessage = "確認密碼不可空白!!")]
        [DataType(DataType.Password)]
        [DisplayFormat(ApplyFormatInEditMode = true, ConvertEmptyStringToNull = false, HtmlEncode = true)]
        [System.ComponentModel.DataAnnotations.Compare("mpassword",ErrorMessage ="密碼不相符！")]
        public string ConfirmPassword { get; set; }

        [Display(Name = "驗證")]
        public bool bool_isvarify { get; set; }


        //由於user內的東西不能重複定義，因此多包一層UserMetaData
        private class UserMetaData
        {
            [Key]
            [DisplayName("紀錄ID")]
            public int rowid { get; set; }
            [DisplayName("會員編號")]
            public string mno { get; set; }

            //[Required(ErrorMessage = "角色不可空白")]
            [DisplayFormat(ApplyFormatInEditMode = true, ConvertEmptyStringToNull = false, HtmlEncode = true)]
            [Display(Name = "角色")]
            public string role_no { get; set; }

            [Required(ErrorMessage ="帳號不可空白!!")]
            //ApplyFormatInEditMode:套用格式，ConvertEmptyStringToNull：空值不轉為null，HtmlEncode:輸入的內容不以html方式執行，防止駭客
            [DisplayFormat(ApplyFormatInEditMode = true,ConvertEmptyStringToNull = false,HtmlEncode = true)]
            [DisplayName("帳號")]
            public string maccount { get; set; }

            [Required(ErrorMessage = "密碼不可空白!!")]
            [DataType(DataType.Password)]
            [DisplayFormat(ApplyFormatInEditMode = true, ConvertEmptyStringToNull = false, HtmlEncode = true)]
            [DisplayName("密碼")]
            public string mpassword { get; set; }

            [Required(ErrorMessage = "姓名不可空白!!")]
            [DisplayFormat(ApplyFormatInEditMode = true, ConvertEmptyStringToNull = false, HtmlEncode = true)]
            [DisplayName("姓名")]
            public string mname { get; set; }

            [DisplayName("暱稱")]
            [Required]
            public string mnickname { get; set; }

            [Required(ErrorMessage = "電子信箱不可空白!!")]
            [DisplayFormat(ApplyFormatInEditMode = true, ConvertEmptyStringToNull = false, HtmlEncode = true, NullDisplayText = "請輸入電子信箱")]
            [EmailAddress(ErrorMessage = "請輸入電子信箱格式")]
            [DisplayName("電子信箱")]
            public string memail { get; set; }

            [DisplayFormat(ApplyFormatInEditMode = true, DataFormatString = "{0:yyyy/MM/dd}")]
            [DisplayName("生日")]
            public Nullable<System.DateTime> birthday { get; set; }

            [DisplayFormat(ApplyFormatInEditMode = true, ConvertEmptyStringToNull = false, HtmlEncode = true)]
            [Display(Name = "備註")]
            public string remark { get; set; }

            [Display(Name = "電子信箱驗證碼")]
            public string varify_code { get; set; }
            
            [Display(Name = "電子信箱驗證通過")]
            public Nullable<int> isvarify { get; set; }

        }

    }
}
